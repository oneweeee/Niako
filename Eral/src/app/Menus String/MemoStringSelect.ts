import { StringSelectMenuBuilder, StringSelectMenuInteraction } from "discord.js";
import BaseInteraction from "../../struct/base/BaseInteraction";
import RuslanClient from "../../struct/client/Client";

export default new BaseInteraction(
    'memo',
    async (client: RuslanClient, menu: StringSelectMenuInteraction<'cached'>) => {
        await menu.update({
            components: [
                client.storage.components.createStringSelectRow()
                .addComponents(
                    new StringSelectMenuBuilder().setCustomId('memo')
                    .setPlaceholder('Хотите что-то узнать?').setOptions(client.config.memo.options)
                )
            ]
        })

        switch(menu.values[0]) {
            case 'project':
                return menu.followUp({
                    embeds: [
                        client.storage.embeds.color()
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(
                            `<:NK_Space:1082911414575976498>**Niako** — гибко **настраеваемый** многофункциональный бот, имеющий в своем арсенале ***приватные комнаты***, ***логирование действий***, ***музыка***, а вишенкой на торте является ***персональный баннер*** с учетом статистики вашего сервера.` + '\n\n'
                            + `<:NK_Space:1082911414575976498>**Niako Support** представляет собой **сервер** поддержки бота **Niako**, на котором вы сможете **обратиться** за помощью, получить **фидбек** от нашей команды, **сообщить** об ошибке или **предложить** идею.`
                        )
                    ],
                    ephemeral: true
                })
            case 'channels':
                return menu.followUp({
                    embeds: [
                        client.storage.embeds.color()
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(
                            `\`\`\`md\n─ ▹  Информация\n\`\`\`` + ''
                            + `<#1119118243207057468> — ознакомление с информацией сервера` + '\n'
                            + `<#1119118291009552415> — правила сервера, которые нужно соблюдать` + '\n'
                            + `<#1223970580336873533> — проведение опросов среди комьюнити` + '\n\n'
                            + `\`\`\`md\n─ ▹  Оповещения\n\`\`\`` + ''
                            + `<#1014489623956820019> — важные обьявления, связанные с проектом` + '\n'
                            + `<#1119118760289255494> — отслеживание состояния наших сервисов` + '\n'
                            + `<#1078697099580932096> — изменения в наших сервисах` + '\n\n'
                            + `\`\`\`md\n─ ▹  Технические\n\`\`\`` + ''
                            + `<#1119118901515657309> — получение помощи от нашей команды` + '\n'
                            + `<#1119118944469516399> — место под ваши идеи для проекта` + '\n\n'
                            + `\`\`\`md\n─ ▹  Текстовые\n\`\`\`` + ''
                            + `<#1014490175033847860> — общий чат для общения` + '\n'
                            + `<#1014490208995123240> — чат для использования команд ботов`
                        )
                    ],
                    ephemeral: true
                })
            case 'roles':
                return menu.followUp({
                    embeds: [
                        client.storage.embeds.color()
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(
                            `<@&1073972775871586325> — Люди, за которыми стоит **разработка** Niako` + '\n'
                            + `<@&1106607883757572116> — Отвечающие за **проект** (партнёрства, предложения и т.п)` + '\n'
                            + `<@&1127603521966059604> — Отвечающие за **программирование** вебсайта` + '\n'
                            + `<@&1106607767453716520> — Отвечающие за **программирование** Niako` + '\n'
                            + `<@&1106608019141300357> — Отвечающий за **дизайн** и **оформление** сайта Niako` + '\n'
                            + `<@&1106607842863095879> — Отвечающий за **оформление** визуальной составляющей **сервера** и **бота**` + '\n'
                            + `<@&1106607874974695425> — Отвечающий за **нарисование** персонажа` + '\n'
                            + `<@&1106607882214047775> — Отвечающий за **написание** текстов в **сервисах** Niako` + '\n'
                            + `<@&1080413094133637191> — Отвечающие за контроль **голосовых** и **текстовых** чатов и **помощи**` + '\n'
                            + `<@&1171399978669834271> — Отвечающие за **продвижение** Niako` + '\n'
                            + `<@&1115182415212707860> — Участники **купившие** подписку на **Boosty**` + '\n'
                            + `<@&1106863890169593926> — Участники **купившие** звёзды в магазине Niako ` + '\n'
                            + `<@&1106608060568436776> — Участники **партнерской** программы Niako` + '\n'
                            + `<@&1091996586067886130> — Когда-то материально **поддержавшие** наш проект люди ` + '\n'
                            + `<@&1106608539595722844> — За указание на **ошибку** (<#${client.config.ticket.channelId}>)` + '\n'
                            + `<@&1106608543836164236> — За принятую **идею** для Niako (<#1119118944469516399>)` + '\n'
                            + `<@&978155307031199805> — Поддержавшие сервер при помощи **Discord Boost**`
                        )
                    ],
                    ephemeral: true
                })
            case 'terms':
                return menu.followUp({
                    embeds: [
                        client.storage.embeds.color()
                        .setTitle('I. Введение')
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(client.util.toCode('Используя наш проект вы безоговорочно принимаете описанные ниже условия и соглашаетесь с обработкой ваших персональных данных в соответствии с нашей политикой конфидицальности, а так же с условиями пользования и политикой конфидицальности самого Discord.', 'fix')),
                        client.storage.embeds.color()
                        .setTitle('II. Условия')
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(
                            client.util.toCode(
                                `Niako не несет ответственности за действия, противоречащие условиям пользования Discord или направленные на нанесение вреда Вам, вашему Discord серверу и его участникам, созданные вследствие неграмотной настройки бота или некомпетентного отношения со стороны администрации вашего Discord сервера.`
                                + '\n' + `Вам запрещается использовать Niako и его ресурсы не по назначению, в целях нанесения вреда другим лицам, коммерции, и привлечения собственной выгоды.`
                                + '\n' + `Вам запрещено предпринимать любые попытки достать или узнать исходный код Niako и прилегающих к нему сервисов без согласия на то владельца проекта.`
                                + '\n' + `Запрещаются любые деструктивные действия по отношению к Niako, включая чрезмерное злоупотребление его функционалом.`
                                + '\n' + `Запрещается неконструктивная критика в сторону Niako и его сервисов, призывы прекратить их использование и любые другие действия/высказывания, направленные на уменьшение популярности и общего охвата Niako.`
                                + '\n' + `Наш проект и его представители, как и Вы непрекословно подчиняемся законодательству Российской Федерации.`
                            )
                        ),
                        client.storage.embeds.color()
                        .setTitle('III. Платные услуги')
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(client.util.toCode('Большая часть функционала Niako доступна бесплатно, однако Niako имеет платную систему разблокировки большего функционала, фундаментом которой служит единица — NiakoBoost. Niako не несет ответственности за отказ в оплате со стороны вашего платежного средства. Мы не производим возврат и вывод платежных средств, которые находятся на вашем виртуальном счете а боте/сайте. Оплата производится только сервисом QIWI и Boosty.')),
                        client.storage.embeds.color()
                        .setTitle('IV. Контент')
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(
                            client.util.toCode(
                                `Некоторые части функционала Niako предоставляют пользователю возможность вносить свой собственный контент. Мы не несем ответственности за представленный в них контент, нарушающий условия пользования и политику конфидицальности Discord.`
                                + '\n' + `Загружая персональный контент через бота на своем частном Discord сервере пользователь автоматически соглашается с политикой конфидицальности и условиями пользования Discord.`
                                + '\n' + `Мы имеем полное право вносить изменения в условия пользования, политику конфидицальности и в прочий контент, представленный на сайте и боте в любой момент, не осведомляя при этом пользователя.`
                            )
                        ),
                        client.storage.embeds.color()
                        .setTitle('V. О работе Niako')
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(client.util.toCode(`Несмотря на то, что разработчик всеми силами пытается исключить любые сбои и ошибки Мы не даём гарантий безотказной работы и отсутствия перебоев и помех в работе со стороны Niako и его сервисов.`)),
                        client.storage.embeds.color()
                        .setTitle('VI. Сервер поддержки Niako')
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(
                            client.util.toCode(
                                `Все важные обьявления размещаются в первую очередь на Discord сервере поддержки Niako, и если вы по какой-либо причине не находитесь на нем, то Niako не несет ответственности за ознакомление пользователей.`
                                + '\n' + `Если вам требуется помощь с настройкой Niako, вы обнаружили ошибку или нарушение условий пользования просьба обратится к технической поддержке на сервере Niako.`
                                )
                        )
                    ],
                    ephemeral: true
                })
            case 'privacy':
                return menu.followUp({
                    embeds: [
                        client.storage.embeds.color()
                        .setTitle('I. Введение')
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(client.util.toCode(`Главной целью этой страницы является информирование вас о том, как ваши данные используются в рамках нашего сервиса. Ваша конфидицальность важна для нас, все данные, обрабатываемые Niako нужны исключительно для стабильной работы сервиса и отдельных его функций.`, 'fix')),
                        client.storage.embeds.color()
                        .setTitle('II. О распоряжении информацией')
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(client.util.toCode(`Мы не продаем и не распространяем собираемую информацию, в случае если инициатором предложения не выступает правительство.`)),
                        client.storage.embeds.color()
                        .setTitle('III. О платежах')
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(client.util.toCode(`Наши сервисы не обрабатывают платежи от пользователей и оставляет эту задачу для прочих платежных провайдеров. Именно платежные провайдеры обрабатывают и хранят ваши платежные данные. Мы не имеем доступа к этой информации и эта информация поступает непосредственно на сервер платежного провайдера. Мы не взаимодействуем, не храним и не обрабатываем ваши кредитные данные.`)),
                        client.storage.embeds.color()
                        .setTitle('IV. 🍪 🍪 🍪')
                        .setImage(client.config.meta.spaceLine)
                        .setDescription(
                            client.util.toCode(
                                `Файл cookie представляет собой небольшой сборник данных в текстовом формате, записываемый вашим браузером.`
                                + '\n' + `Мы используем файлы cookie для авторизации и отображения вашего Discord профиля. Ваш браузер наверняка позволяет вам контролировать эти файлы cookie, их принятие и удаление. Вы можете заблокировать файлы cookie в своем браузере, однако, в таком случае наш сервис не может гарантировать стабильную работу и полную функциональность.`
                                + '\n' + `После авторизации своего Discord профиля вы предоставляете нам информацию о нем, такую как: ваш Никнейм, Аватар пользователя.`
                            )
                        )
                    ],
                    ephemeral: true
                })
            case 'profile':
                return menu.followUp({
                    embeds: client.config.notice.embeds,
                    components: [
                        client.storage.components.createStringSelectRow()
                        .addComponents(
                            new StringSelectMenuBuilder()
                            .setCustomId('notice')
                            .setPlaceholder('Выберете роль для уведомлений...')
                            .setMaxValues(client.config.notice.options.length)
                            .setOptions([
                                { label: 'Очистить выбор', value: 'clear', emoji: client.config.emojis.clear },
                                ...client.config.notice.options
                            ])
                        )
                    ],
                    ephemeral: true
                })
        }
    }
)